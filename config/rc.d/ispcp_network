#!/bin/sh

# ispCP ω (OMEGA) a Virtual Hosting Control Panel
# Copyright (C) 2006-2010 by isp Control Panel - http://ispcp.net
#
# Version: $Id: ispcp_network 3280 2010-09-12 12:04:03Z scitech $
#
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is "ispCP - ISP Control Panel".
#
# The Initial Developer of the Original Code is ispCP Team.
# Portions created by the ispCP Team are Copyright (C) 2006-2010 by
# isp Control Panel. All Rights Reserved.
#
# The ispCP ω Home Page is:
#
#    http://isp-control.net
#

### BEGIN INIT INFO
# Provides:             ispcp_network
# Should-Stop:          $local_fs
# Required-Stop:
# Required-Start:       $network $local_fs $remote_fs

# description: ispCP Network Traffic Logger
#

# config:               /etc/ispcp/ispcp.conf
# lockfile:             /var/run/ispcp/ispcp_network.lck

daemon_name=ispcp_network

. /etc/rc.conf
. /etc/rc.d/functions
. /etc/conf.d/$daemon_name.conf

[[ -d /var/run/ispcp ]] || install -d -o root -g root /var/run/ispcp

add_rules() {
    iptables -N ISPCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
    iptables -N ISPCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"

    # All traffic should jump through ISPCP tables before anything else
    iptables -I INPUT -j ISPCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
    iptables -I OUTPUT -j ISPCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"

    # Services from matrix basically receiving data
    for PORT in $SERVICES; do
        iptables -I ISPCP_INPUT  -p tcp --dport "$PORT" 2>> "$LOGFILE"
        iptables -I ISPCP_OUTPUT -p tcp --sport "$PORT" 2>> "$LOGFILE"
    done

    # Services from matrix basically sending data
    for PORT in $SERVICES_OUT; do
        iptables -I ISPCP_INPUT  -p tcp --sport "$PORT" 2>> "$LOGFILE"
        iptables -I ISPCP_OUTPUT -p tcp --dport "$PORT" 2>> "$LOGFILE"
    done

    # Explicit return once done
    iptables -A ISPCP_INPUT -j RETURN
    iptables -A ISPCP_OUTPUT -j RETURN

    # Touch lock file
    touch $LCKFILE
}

remove_rules() {
    iptables -D INPUT -j ISPCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
    iptables -D OUTPUT -j ISPCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"
    iptables -F ISPCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
    iptables -F ISPCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"
    iptables -X ISPCP_INPUT 2>> "${LOG_DIR}/${NAME}.err.log"
    iptables -X ISPCP_OUTPUT 2>> "${LOG_DIR}/${NAME}.err.log"

    # Remove lock file
    rm $LCKFILE
}

add_interfaces() {
    ${ENGINETOOLSPATH}/${NETWORKCARDMANAGER} start >${LOGDIR}/${NETWORKCARDMANAGER}.log 2>&1
}

remove_interfaces() {
    ${ENGINETOOLSPATH}/${NETWORKCARDMANAGER} stop >${LOGDIR}/${NETWORKCARDMANAGER}.log 2>&1
}

case "$1" in
    start)
        stat_busy "Starting $DESC"
        if [ -e $LCKFILE ]; then
            stat_fail
            echo " ${NAME} is already started" >&2
            exit 1
        else
            add_interfaces
            add_rules
            stat_done
        fi
    ;;

    stop)
        stat_busy "Stopping $DESC"
        if [ ! -e $LCKFILE ]; then
            stat_fail
            echo "${NAME} is already stopped" >&2
            exit 1
        else
            remove_rules
            remove_interfaces
            stat_done
        fi
    ;;

    restart)
        stat_busy "Restarting $DESC"
        if [ ! -e $LCKFILE ]; then
           echo "${NAME} is already stopped" >&2
        else
           remove_rules
           remove_interfaces
           sleep 2
        fi
        add_interfaces
        add_rules
        stat_done
    ;;

    status)
        if [ ! -e $LCKFILE ]; then
           echo "${NAME} is stopped"
        else
           echo "${NAME} is started"
        fi
    ;;

    *)
        echo "usage: $0 {start|stop|restart|status}"
    ;;
esac

exit 0
